---
import { type CollectionEntry, getCollection } from 'astro:content';

export async function getStaticPaths() {
  const lessons = await getCollection('lessons');
  return lessons.map((lesson) => ({
    params: { slug: lesson.filePath!.replace('src/content/lessons/', '').replace('.md', '') },
    props: { lesson }

  }))
}

// const { slug } = Astro.params;
// const lessons = await getCollection('lessons');
// const lesson = lessons.find(lesson => 
//   lesson!.filePath!.includes(slug)
// );

// console.log('Lesson Data:', lesson);
const { lesson } = Astro.props as { lesson: CollectionEntry<'lessons'> };
console.log(lesson);

// const lesson = Astro.props;
// const { Content } = await lesson.render();
// const { rendered } = lesson; // Access the 'rendered' property for HTML content
// const { Content } = await lesson.render();


---

<article>
  {lesson.rendered?.html 
    ? <div set:html={lesson.rendered.html}></div>
    : <p>No content available for this lesson.</p>
  }
</article>
