---
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

import "../styles/global.css";

interface Lesson {
  id: string;
  slug: string;
  body: string;
  collection: string;
  data: Record<string, any>;
  render: any;
}

interface Props {
  groupedLessonsArray: [string, Lesson[]][];
}

const { groupedLessonsArray } = Astro.props;

const formattedLessonsArray = groupedLessonsArray.map(([folder, lessons], index) => {
  const lessonTitle = folder
    .replace(/^\d+_/, "") // Remove leading numbers & underscores (e.g., "01_intro" â†’ "intro")
    .replace(/-/g, " ") // Replace hyphens with spaces
    .replace(/\b\w/g, (char) => char.toUpperCase()); // Capitalize first letter of each word

  const sortedLessons = lessons.sort((a, b) => {
    const aFile = a.id.split("/").pop();
    const bFile = b.id.split("/").pop();

    if (aFile === "instruction.md") return -1;
    if (bFile === "instruction.md") return 1;

    return (a.data.order || 100) - (b.data.order || 100);
  });

  return { index: index + 1, title: lessonTitle, lessons: sortedLessons };
});
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Accessibility Course</title>
  </head>
  <body class="bg-[#f1f5f9] font-sans">
    <Header />

    <div class="flex w-full">
      <aside
        id="merged-sidebar"
        role="navigation"
        aria-label="Lessons Navigation"
        class="w-72 overflow-y-auto bg-blue-100 dark:bg-blue-900 px-3 py-4"
      >
        {formattedLessonsArray.map(({ index, title, lessons }) => (
          <div class="mb-6">
            <h2 class="mb-2 pl-2 text-lg font-bold">
              Lesson {index}: {title}
            </h2>
            <ul class="pl-4 space-y-2 font-medium">
              {lessons
                .filter((subLesson) => !subLesson.id.endsWith("home.md"))
                .map((subLesson) => {
                  const fileName = subLesson.id.split("/")[1];
                  let label = fileName.replace(".md", "").replace("-", " ");
                  label = label.charAt(0).toUpperCase() + label.slice(1);

                  if (
                    title.includes("Intro") &&
                    fileName === "instruction.md"
                  ) {
                    label = "Introduction";
                  } else {
                    label = `${title}: ${label}`;
                  }

                  return (
                    <li>
                      <a
                        href={`/lessons/${subLesson.slug}`}
                        class="block w-full p-2 rounded-lg text-md text-blue-600 hover:bg-gray-100 hover:text-blue-800 transition"
                        title={label}
                      >
                        {label}
                      </a>
                    </li>
                  );
                })}
            </ul>
          </div>
        ))}
      </aside>

      <!-- Main content: takes up remaining space, left aligned -->
      <main
        id="main-content"
        class="flex-1 mx-0 pl-10 min-h-[calc(100vh-4rem-4rem)]"
      >
        <div class="max-w-[80ch] p-4">
          <slot />
        </div>
      </main>
    </div>

    <Footer />
  </body>
</html>
